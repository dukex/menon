[
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nIntroduction; course outline, mechanics, and expectations. Described finite automata, their formal definition, regular languages, regular operations, and regular expressions. Proved that the class of regular languages is closed under union. Started proving closure under concatenation.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "1. Introduction, Finite Automata, Regular Expressions",
    "position": 0,
    "provider_id": "9syvZr-9xwk",
    "published_at": "2021-09-14T18:36:18Z",
    "slug": "1-introduction-finite-automata-regular-expressions",
    "thumbnail_url": "https://i.ytimg.com/vi/9syvZr-9xwk/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Introduced nondeterministic finite automata (NFA). Proved that NFA and DFA are equivalent in power. Proved that the class of regular languages is closed under concatenation and star. Showed conversion of regular expressions to NFAs.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "2. Nondeterminism, Closure Properties, Conversion of Regular Expressions to FA",
    "position": 1,
    "provider_id": "oNsscmUwjMU",
    "published_at": "2021-09-14T18:32:58Z",
    "slug": "2-nondeterminism-closure-properties-conversion-of-regular-expressions-to-fa",
    "thumbnail_url": "https://i.ytimg.com/vi/oNsscmUwjMU/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Showed conversion of DFAs to regular expressions. Gave a method for proving languages not regular by using the pumping lemma and closure properties. Introduced context free grammars (CFGs).\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "3. Regular Pumping Lemma, Conversion of FA to Regular Expressions",
    "position": 2,
    "provider_id": "KAySmSEGc9U",
    "published_at": "2021-09-14T18:35:01Z",
    "slug": "3-regular-pumping-lemma-conversion-of-fa-to-regular-expressions",
    "thumbnail_url": "https://i.ytimg.com/vi/KAySmSEGc9U/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Defined context free grammars (CFGs) and context free languages (CFLs). Defined pushdown automata (PDA). Gave conversion of CFGs to PDAs.  Stated the reverse conversion without proof.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "4. Pushdown Automata, Conversion of CFG to PDA and Reverse Conversion",
    "position": 3,
    "provider_id": "m9eHViDPAJQ",
    "published_at": "2021-09-14T18:33:27Z",
    "slug": "4-pushdown-automata-conversion-of-cfg-to-pda-and-reverse-conversion",
    "thumbnail_url": "https://i.ytimg.com/vi/m9eHViDPAJQ/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Proved the CFL pumping lemma as a tool for showing that languages are not context free. Defined Turing machines (TMs). Defined TM deciders (halt on all inputs).\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "5. CF Pumping Lemma, Turing Machines",
    "position": 4,
    "provider_id": "IycOPFmEQk8",
    "published_at": "2021-09-14T18:51:15Z",
    "slug": "5-cf-pumping-lemma-turing-machines",
    "thumbnail_url": "https://i.ytimg.com/vi/IycOPFmEQk8/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Showed that various TM variants are all equivalent to the single-tape model. Discussed the Church-Turing Thesis: Turing machines are equivalent to \u201calgorithms\u201d and model-independence.  Introduced notation for encoding objects and describing TMs.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "6. TM Variants, Church-Turing Thesis",
    "position": 5,
    "provider_id": "TTArY7ojshU",
    "published_at": "2021-09-14T18:33:48Z",
    "slug": "6-tm-variants-church-turing-thesis",
    "thumbnail_url": "https://i.ytimg.com/vi/TTArY7ojshU/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Showed the decidability of various problems about automata and grammars. Also showed that acceptance problem for TMs is T-recognizable.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "7. Decision Problems for Automata and Grammars",
    "position": 6,
    "provider_id": "4MgN6uxd4i4",
    "published_at": "2021-09-14T18:33:05Z",
    "slug": "7-decision-problems-for-automata-and-grammars",
    "thumbnail_url": "https://i.ytimg.com/vi/4MgN6uxd4i4/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Showed that natural numbers and real numbers are not the same size to introduce the diagonalization method and used it to prove acceptance problem for TMs is undecidable. Introduced the reducibility method to show that HALT for TMs is undecidable.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "8. Undecidability",
    "position": 7,
    "provider_id": "3PzuSPQPEU4",
    "published_at": "2021-09-14T18:35:00Z",
    "slug": "8-undecidability",
    "thumbnail_url": "https://i.ytimg.com/vi/3PzuSPQPEU4/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Discussed the reducibility method to prove undecidability and T-unrecognizability. Defined mapping reducibility as a type of reducibility. Showed that emptiness problem for TMs is undecidable and T-unrecognizable.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "9. Reducibility",
    "position": 8,
    "provider_id": "N28g_YBXY8Y",
    "published_at": "2021-09-14T18:33:51Z",
    "slug": "9-reducibility",
    "thumbnail_url": "https://i.ytimg.com/vi/N28g_YBXY8Y/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Defined configurations and computation histories. Gave the computation history method to prove undecidability. Showed that acceptance problem for LBA is decidable; emptiness problem for LBA, PCP, and ALL for CFG are undecidable.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "10. Computation History Method",
    "position": 9,
    "provider_id": "MGqoLm2aAgc",
    "published_at": "2021-09-14T18:36:28Z",
    "slug": "10-computation-history-method",
    "thumbnail_url": "https://i.ytimg.com/vi/MGqoLm2aAgc/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Discussed self-reference and the recursion theorem. Gave various applications. Sketched Godel\u2019s first incompleteness theorem in mathematical logic.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "11. Recursion Theorem and Logic",
    "position": 10,
    "provider_id": "N-_XmLanPYg",
    "published_at": "2021-09-14T18:34:58Z",
    "slug": "11-recursion-theorem-and-logic",
    "thumbnail_url": "https://i.ytimg.com/vi/N-_XmLanPYg/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Gave an introduction to complexity theory.  Discussed limited complexity model-dependence for reasonable models.  Defined TIME(t(n)) complexity classes and the class P.  Showed that PATH is in P.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "12. Time Complexity",
    "position": 11,
    "provider_id": "asjAc90L8rE",
    "published_at": "2021-09-14T18:36:35Z",
    "slug": "12-time-complexity",
    "thumbnail_url": "https://i.ytimg.com/vi/asjAc90L8rE/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nNOTE: There is no video for Lecture 13 as that was the day for the Midterm Exam.\n\nQuickly reviewed last lecture. Defined NTIME(t(n)) complexity classes and the class NP.  Showed that COMPOSITES is in NP. Discussed the P versus NP question. Proved that acceptance problem for CFG is in P. Introduced the satisfiability problem SAT and polynomial-time reducibility.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "14. P and NP, SAT, Poly-Time Reducibility",
    "position": 12,
    "provider_id": "1VhnDdQsELo",
    "published_at": "2021-09-14T18:39:44Z",
    "slug": "14-p-and-np-sat-poly-time-reducibility",
    "thumbnail_url": "https://i.ytimg.com/vi/1VhnDdQsELo/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Covered NP-completeness; SAT and 3SAT; and more.  Discussed a strategy for proving NP-completeness with a reduction from 3SAT by constructing gadgets that simulate variables and clauses. \n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "15. NP-Completeness",
    "position": 13,
    "provider_id": "iZPzBHGDsWI",
    "published_at": "2021-09-14T18:33:57Z",
    "slug": "15-np-completeness",
    "thumbnail_url": "https://i.ytimg.com/vi/iZPzBHGDsWI/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Proved Cook-Levin Theorem: SAT is NP-complete. Also proved 3SAT is NP-complete.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "16. Cook-Levin Theorem",
    "position": 14,
    "provider_id": "6Az1gtDRaAU",
    "published_at": "2021-09-14T18:33:12Z",
    "slug": "16-cook-levin-theorem",
    "thumbnail_url": "https://i.ytimg.com/vi/6Az1gtDRaAU/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Introduced space complexity. Defined SPACE(f(n)), NSPACE(f(n)) , PSPACE, and NPSPACE. Proved that TQBF is in PSPACE; LADDER for DFA is in NSPACE(n); and LADDER for DFA is in SPACE(n^2).\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "17. Space Complexity, PSPACE, Savitch's Theorem",
    "position": 15,
    "provider_id": "cT_qwkTigv4",
    "published_at": "2021-09-14T18:36:05Z",
    "slug": "17-space-complexity-pspace-savitchs-theorem",
    "thumbnail_url": "https://i.ytimg.com/vi/cT_qwkTigv4/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Proved Savitch\u2019s Theorem: NSPACE(f(n)) is a subset of SPACE(f^2(n)). Also proved PSPACE-completeness and TQBF is PSPACE-complete.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "18. PSPACE-Completeness",
    "position": 16,
    "provider_id": "aVv9WXwW95w",
    "published_at": "2021-09-14T18:33:30Z",
    "slug": "18-pspace-completeness",
    "thumbnail_url": "https://i.ytimg.com/vi/aVv9WXwW95w/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Discussed a connection between games and quantifiers. Described the formula game and showed that generalized geography is PSPACE-complete.  Introduced log space:  L and NL. Defined the configuration graph to prove NL is a subset of P.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "19. Games, Generalized Geography",
    "position": 17,
    "provider_id": "4dFPVJrNLDs",
    "published_at": "2021-09-14T18:35:16Z",
    "slug": "19-games-generalized-geography",
    "thumbnail_url": "https://i.ytimg.com/vi/4dFPVJrNLDs/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nReviewed log space: NL is a subset of SPACE(log^2n) and NL is a subset of P. Introduced log-space transducers and log-space reducibility. Defined NL-completeness. Proved that PATH is NL-complete. Also proved the Immerman-Szelepcs\u00e9nyi theorem: NL = coNL.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "20. L and NL, NL = coNL",
    "position": 18,
    "provider_id": "q3xvno_KgRY",
    "published_at": "2021-09-14T18:34:53Z",
    "slug": "20-l-and-nl-nl-conl",
    "thumbnail_url": "https://i.ytimg.com/vi/q3xvno_KgRY/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Finished Immerman-Szelepcsenyi theorem: NL = coNL.  Introduced and proved the time and space hierarchy theorems.  Discussed using the hierarchy theorems to separate certain complexity classes.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "21. Hierarchy Theorems",
    "position": 19,
    "provider_id": "vqFRAWeEcUs",
    "published_at": "2021-09-14T18:33:30Z",
    "slug": "21-hierarchy-theorems",
    "thumbnail_url": "https://i.ytimg.com/vi/vqFRAWeEcUs/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Introduced exponential complexity classes and demonstrated a \u201cnatural\u201d provably intractable problem.  Introduced oracles and relativized computation to suggest that pure diagonalization-based methods cannot separate P and NP.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "22. Provably Intractable Problems, Oracles",
    "position": 20,
    "provider_id": "N32bnUliSzo",
    "published_at": "2021-09-14T18:33:43Z",
    "slug": "22-provably-intractable-problems-oracles",
    "thumbnail_url": "https://i.ytimg.com/vi/N32bnUliSzo/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Defined probabilistic Turing machines and the class BPP. Sketched the amplification lemma. Introduced branching programs and read-once branching programs. Started the proof that EQ for ROBP is in BPP. Introduced the arithmetization method.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "23. Probabilistic Computation, BPP",
    "position": 21,
    "provider_id": "Vp_AzDGQyrA",
    "published_at": "2021-09-14T18:36:15Z",
    "slug": "23-probabilistic-computation-bpp",
    "thumbnail_url": "https://i.ytimg.com/vi/Vp_AzDGQyrA/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Simulated read-once branching programs by polynomials. Gave a probabilistic polynomial equality testing method. Concluded proving that EQ for ROBP is in BPP.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "24. Probabilistic Computation (cont.)",
    "position": 22,
    "provider_id": "7J1HD9rqEB4",
    "published_at": "2021-09-14T18:33:42Z",
    "slug": "24-probabilistic-computation-cont",
    "thumbnail_url": "https://i.ytimg.com/vi/7J1HD9rqEB4/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Introduced the interactive proof system model. Defined the class IP. Started showing that #SAT is in IP to prove that coNP is a subset of IP.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "25. Interactive Proof Systems, IP",
    "position": 23,
    "provider_id": "TSI3LR5WZmo",
    "published_at": "2021-09-14T18:34:12Z",
    "slug": "25-interactive-proof-systems-ip",
    "thumbnail_url": "https://i.ytimg.com/vi/TSI3LR5WZmo/maxresdefault.jpg"
  },
  {
    "course": "mit-18404j-theory-of-computation-fall-2020",
    "description": "MIT 18.404J Theory of Computation, Fall 2020\nInstructor: Michael Sipser\nView the complete course: https://ocw.mit.edu/18-404JF20\nYouTube Playlist: https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY\n\nQuickly reviewed last lecture. Discussed the arithmetization of Boolean formulas. Finished the theorem: #SAT is in IP and concluded that coNP is a subset of IP.\n\nLicense: Creative Commons BY-NC-SA\nMore information at https://ocw.mit.edu/terms\nMore courses at https://ocw.mit.edu\nSupport OCW at http://ow.ly/a1If50zVRlQ\n\nWe encourage constructive comments and discussion on OCW\u2019s YouTube and other social media channels. Personal attacks, hate speech, trolling, and inappropriate comments are not allowed and may be removed. More details at https://ocw.mit.edu/comments.",
    "duration": 1,
    "name": "26. coNP is a subset of IP",
    "position": 24,
    "provider_id": "eEXSv0jChO4",
    "published_at": "2021-09-14T18:38:03Z",
    "slug": "26-conp-is-a-subset-of-ip",
    "thumbnail_url": "https://i.ytimg.com/vi/eEXSv0jChO4/maxresdefault.jpg"
  }
]